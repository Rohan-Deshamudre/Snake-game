import com.github.spotbugs.SpotBugsTask

plugins {
    id 'java'
//    id 'eclipse' // optional (to generate Eclipse project files)
//    id 'idea' // optional (to generate IntelliJ IDEA project files)
    id 'application'
    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // FindBugs / SpotBugs
    id "com.github.spotbugs" version "2.0.1"

    // Lombok
    id "io.freefair.lombok" version "4.1.4"

    // JavaFX
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'nl.tudelft.cse.sem.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 12

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
        excludes = []
    }

    finalizedBy jacocoTestReport
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'METHOD'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
            excludes = [
                'HelloWorld.HelloWorld()',
                'HelloWorld.main(java.lang.String[])',
                'Student.hashCode()',
                    'Main.Main()',
                'Main.main(java.lang.String[])',
                'Main.start(javafx.stage.Stage)'
            ]
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

checkstyle {
    ignoreFailures = false
    maxWarnings = 5
    toolVersion "8.25"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

pmd {
    incrementalAnalysis = true
}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    effort = "default"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

tasks.withType(SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

javafx {
    version = "12"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

mainClassName = 'gui.MainRunner'